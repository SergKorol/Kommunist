<?xml version="1.0" encoding="utf-8" ?>

<ContentPage
    Style="{StaticResource DefaultPageStyle}"
    Title="Event Calendar"
    x:Class="Kommunist.Application.Views.EventCalendarPage"
    x:DataType="{x:Type ViewModels:EventCalendarViewModel}"
    x:Name="This"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:Models="clr-namespace:Kommunist.Application.Models"
    xmlns:ViewModels="clr-namespace:Kommunist.Application.ViewModels"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xc="clr-namespace:XCalendar.Maui.Views;assembly=XCalendar.Maui">


    <ContentPage.Resources>
        <!--  Returns true if all bindings evaluate to true  -->
        <mct:VariableMultiValueConverter ConditionType="All" x:Key="AllTrueConverter" />
        <!--  Inverts a binded boolean value  -->
        <mct:InvertedBoolConverter x:Key="InvertedBoolConverter" />
    </ContentPage.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Border
            BackgroundColor="{StaticResource ContentBackgroundColor}"
            Grid.Row="0"
            Margin="10"
            Padding="10">

            <Border.StrokeShape>
                <RoundRectangle CornerRadius="15" />
            </Border.StrokeShape>

            <xc:CalendarView
                BackwardsArrowCommand="{Binding NavigateCalendarCommand}"
                Days="{Binding EventCalendar.Days}"
                DaysOfWeek="{Binding EventCalendar.DayNamesOrder}"
                ForwardsArrowCommand="{Binding NavigateCalendarCommand}"
                NavigatedDate="{Binding EventCalendar.NavigatedDate}"
                Style="{StaticResource DefaultCalendarViewStyle}"
                x:Name="MainCalendarView">

                <xc:CalendarView.ForwardsArrowCommandParameter>
                    <x:Int32>1</x:Int32>
                </xc:CalendarView.ForwardsArrowCommandParameter>

                <xc:CalendarView.BackwardsArrowCommandParameter>
                    <x:Int32>-1</x:Int32>
                </xc:CalendarView.BackwardsArrowCommandParameter>

                <xc:CalendarView.NavigationViewTemplate>
                    <ControlTemplate>
                        <xc:NavigationView
                            ArrowColor="{StaticResource ContentTextColor}"
                            BackgroundColor="Transparent"
                            BackwardsArrowCommand="{Binding BackwardsArrowCommand, Source={RelativeSource TemplatedParent}}"
                            BackwardsArrowCommandParameter="{Binding BackwardsArrowCommandParameter, Source={RelativeSource TemplatedParent}}"
                            ForwardsArrowCommand="{Binding ForwardsArrowCommand, Source={RelativeSource TemplatedParent}}"
                            ForwardsArrowCommandParameter="{Binding ForwardsArrowCommandParameter, Source={RelativeSource TemplatedParent}}"
                            HeightRequest="40"
                            Style="{StaticResource DefaultNavigationViewStyle}"
                            Text="{Binding Text, Source={RelativeSource TemplatedParent}}"
                            TextColor="{StaticResource ContentTextColor}" />
                    </ControlTemplate>
                </xc:CalendarView.NavigationViewTemplate>

                <xc:CalendarView.DayTemplate>
                    <DataTemplate x:DataType="{x:Type Models:EventDay}">
                        <Border
                            BackgroundColor="Transparent"
                            HeightRequest="45"
                            Margin="2.5"
                            WidthRequest="45">

                            <Border.StrokeShape>
                                <Ellipse />
                            </Border.StrokeShape>

                            <xc:DayView
                                CurrentMonthCommand="{Binding BindingContext.ChangeDateSelectionCommand, Source={x:Reference This}}"
                                CurrentMonthCommandParameter="{Binding DateTime}"
                                DateTime="{Binding DateTime}"
                                IsCurrentMonth="{Binding IsCurrentMonth}"
                                IsInvalid="{Binding IsInvalid}"
                                IsSelected="{Binding IsSelected}"
                                IsToday="{Binding IsToday}"
                                SelectedCommand="{Binding BindingContext.ChangeDateSelectionCommand, Source={x:Reference This}}"
                                SelectedCommandParameter="{Binding DateTime}"
                                Style="{StaticResource DefaultDayViewStyle}"
                                TodayCommand="{Binding BindingContext.ChangeDateSelectionCommand, Source={x:Reference This}}"
                                TodayCommandParameter="{Binding DateTime}">

                                <xc:DayView.ControlTemplate>
                                    <ControlTemplate>
                                        <!--  Using a Grid to stack views on the z axis  -->
                                        <!--  TemplatedParent refers to the view that the ControlTemplate resides in  -->
                                        <Grid BindingContext="{Binding BindingContext, Source={RelativeSource TemplatedParent}}" RowSpacing="2">

                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="1.5*" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>

                                            <!--  ContentPresenter displays the default content for the control  -->
                                            <ContentPresenter
                                                Grid.Row="0"
                                                Grid.RowSpan="2"
                                                VerticalOptions="Center" />

                                            <HorizontalStackLayout
                                                BindableLayout.ItemsSource="{Binding CalEvents}"
                                                Grid.Row="1"
                                                HorizontalOptions="Center"
                                                Spacing="2.5">

                                                <!--  I want the event indicators to only be visible when the DateTime is in the currently navigated month  -->
                                                <HorizontalStackLayout.IsVisible>
                                                    <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                                        <Binding Path="IsCurrentMonth" />
                                                        <Binding Converter="{StaticResource InvertedBoolConverter}" Path="IsInvalid" />
                                                    </MultiBinding>
                                                </HorizontalStackLayout.IsVisible>

                                                <BindableLayout.ItemTemplate>
                                                    <DataTemplate x:DataType="{x:Type Models:CalEvent}">
                                                        <BoxView
                                                            Color="{Binding Color}"
                                                            CornerRadius="100"
                                                            HeightRequest="7"
                                                            HorizontalOptions="CenterAndExpand"
                                                            VerticalOptions="Center"
                                                            WidthRequest="7" />
                                                    </DataTemplate>
                                                </BindableLayout.ItemTemplate>

                                            </HorizontalStackLayout>

                                        </Grid>
                                    </ControlTemplate>
                                </xc:DayView.ControlTemplate>

                            </xc:DayView>
                        </Border>
                    </DataTemplate>
                </xc:CalendarView.DayTemplate>

            </xc:CalendarView>

        </Border>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <CollectionView ItemsSource="{Binding SelectedEvents}">

                <CollectionView.EmptyView>
                    <Label
                        FontAttributes="Bold"
                        FontSize="20"
                        HorizontalTextAlignment="Center"
                        Text="No Events"
                        TextColor="{StaticResource ContentTextColor}"
                        VerticalTextAlignment="Center" />
                </CollectionView.EmptyView>

                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical" Span="1" />
                </CollectionView.ItemsLayout>

                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="{x:Type Models:CalEvent}">
                        <Border
                            BackgroundColor="Transparent"
                            Margin="5"
                            StrokeThickness="0">

                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="10" />
                            </Border.StrokeShape>

                            <Border.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type ViewModels:EventCalendarViewModel}}, Path=EventSelectedCommand}" CommandParameter="{Binding .}" />
                            </Border.GestureRecognizers>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <BoxView
                                    BackgroundColor="{Binding Color}"
                                    Grid.Column="0"
                                    WidthRequest="20" />
                                <VerticalStackLayout
                                    BackgroundColor="{StaticResource ContentBackgroundColor}"
                                    Grid.Column="1"
                                    Padding="10">
                                    <Label
                                        FontAttributes="Bold"
                                        FontSize="20"
                                        Text="{Binding DateTime, StringFormat='{0: dd MMMM HH:mm}'}"
                                        TextColor="{StaticResource ContentTextColor}"
                                        VerticalTextAlignment="Center" />
                                    <Label
                                        FontSize="16"
                                        Margin="5,0,0,0"
                                        Text="{Binding Title}"
                                        TextColor="{StaticResource ContentTextColor}" />
                                    <Label
                                        FontSize="14"
                                        Margin="5,10,0,0"
                                        Text="{Binding Description}"
                                        TextColor="{StaticResource ContentTextColor}" />
                                </VerticalStackLayout>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </Grid>
    </Grid>

</ContentPage>